name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      # Change if your branches are different
      - prod

permissions:
  contents: read

env:
  GCP_PROJECT: ${{ vars.GCP_PROJECT }}
  GCP_REGION: ${{ vars.GCP_REGION }}
  DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}

jobs:
  define_environment:
    name: Define environment
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.set.outputs.environment }}
    steps:
      - name: Set environment as output
        id: set
        # Change this if your branches are different
        run: |
          if [[ "${GITHUB_REF_NAME}" == "prod" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          else
            echo "environment=prod" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build projects
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    needs:
      - define_environment
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build projects
        run: npx nx run-many --target=build --all
        env:
          VITE_ADMIN_AUTH_API_KEY: ${{ vars.ADMIN_AUTH_API_KEY }}
          VITE_ADMIN_AUTH_TENANT_ID: ${{ vars.ADMIN_AUTH_TENANT_ID }}
          VITE_ADMIN_API_BASE_URL: ${{ vars.ADMIN_API_BASE_URL }}
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
          if-no-files-found: "error"

  build_docker-api:
    name: Build docker image (api)
    needs:
      - define_environment
      - build
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Docker auth
        run: ./deployment/utils/docker-auth.sh
      - name: Build & Push Docker image
        run: ./deployment/api/build.sh

  deploy-api:
    name: Deploy (api)
    needs:
      - define_environment
      - build_docker-api
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Google auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Deploy
        run: ./deployment/api/deploy.sh

  build_docker-admin-api:
    name: Build docker image (admin-api)
    needs:
      - define_environment
      - build
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Docker auth
        run: ./deployment/utils/docker-auth.sh
      - name: Build & push docker image
        run: ./deployment/admin-api/build.sh

  deploy-admin-api:
    name: Deploy (admin-api)
    needs:
      - define_environment
      - build_docker-admin-api
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Google auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Deploy
        run: ./deployment/admin-api/deploy.sh
        env:
          ADMIN_AUTH_PROJECT_ID: ${{ vars.GCP_PROJECT }}
          ADMIN_AUTH_TENANT_ID: ${{ vars.ADMIN_AUTH_TENANT_ID }}

  build_docker-admin-ui:
    name: Build docker image (admin-ui)
    needs:
      - define_environment
      - build
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./dist
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Docker auth
        run: ./deployment/utils/docker-auth.sh
      - name: Build & push docker image
        run: ./deployment/admin-ui/build.sh

  deploy-admin-ui:
    name: Deploy (admin-ui)
    needs:
      - define_environment
      - build_docker-admin-ui
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Google auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Deploy
        run: ./deployment/admin-ui/deploy.sh

  build_docker-db:
    name: Build docker image (db)
    needs:
      - define_environment
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Docker auth
        run: ./deployment/utils/docker-auth.sh
      - name: Build & Push Docker image
        run: ./deployment/db/build.sh

  deploy-db:
    # The following line can be removed. Used for testing purposes.
    if: ${{ vars.DISABLE_DB_MIGRATION != 'true' }}
    name: Deploy (db)
    needs:
      - define_environment
      - build_docker-db
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define_environment.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Google auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Deploy
        run: ./deployment/db/deploy.sh
